execution:
  - concurreny: 1
    hold-for: ${__P(scenario-duration,60)}
    scenario: download-ideal-stock-amounts-csv
  - concurreny: 1
    hold-for: ${__P(scenario-duration,60)}
    scenario: upload-ideal-stock-amounts-csv

scenarios:
  get-user-token:
    requests:
      - url: ${__P(base-uri)}/api/oauth/token
        method: POST
        label: GetUserToken
        headers:
          Authorization: Basic ${__base64Encode(${__P(basic-auth)})}
        body:
          grant_type: password
          username: ${__P(username)}
          password: ${__P(password)}
        extract-jsonpath:
          access_token:
            jsonpath: $.access_token

  download-ideal-stock-amounts-csv:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/idealStockAmounts?format=csv
        method: GET
        label: GetAnIdealStockAmountCSV
        headers:
          Authorization: Bearer ${access_token}

  upload-ideal-stock-amounts-csv:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/idealStockAmounts?format=csv
        method: POST
        label: UploadIdealStockAmounts
        headers:
          Authorization: Bearer ${access_token}
        upload-files:
          - param: file
            path: /tmp/resources/isa.csv

reporting:
    - module: passfail
      criteria:
        Download Ideal Stock Amounts too slow: p90 of GetAnIdealStockAmountCSV>1100ms
        Upload Ideal Stock Amounts too slow: p90 of UploadIdealStockAmounts>3000ms