execution:
  - concurrency: 30
    hold-for: ${__P(scenario-duration,60)}
    scenario: facility-update

scenarios:
  get-user-token:
    requests:
      - if: '${__javaScript(vars.get("access_token") == null)}'
        then:
          - url: ${__P(base-uri)}/api/oauth/token
            method: POST
            label: GetUserToken
            headers:
              Authorization: Basic ${__base64Encode(${__P(basic-auth)})}
            body:
              grant_type: password
              username: ${__P(username)}
              password: ${__P(password)}
            extract-jsonpath:
              access_token:
                jsonpath: $.access_token
  facilities-get-one:
    requests:
      - include-scenario: get-user-token
      # Lurio, Cuamba
      - url: ${__P(base-uri)}/api/facilities/4774fc63-a0c8-4a29-a01d-5b6b48632175
        method: GET
        label: GetFacility
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
  facility-update:
    requests:
      - include-scenario: facilities-get-one
      # Lurio, Cuamba
      - url: ${__P(base-uri)}/api/facilities/4774fc63-a0c8-4a29-a01d-5b6b48632175
        method: PUT
        label: UpdateFacilityAsync
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        jsr223:
          execute: before
          script-text: |
            import groovy.json.JsonSlurper
            import groovy.json.JsonOutput

            def response = prev.getResponseDataAsString()
            def jsonSlurper = new JsonSlurper()

            def facility = jsonSlurper.parseText(response)
            facility.name = "Updated Test facility"

            vars.put("facility", JsonOutput.toJson(facility))
        body: ${facility}

reporting:
    - module: passfail
      criteria:
        Update Facility too slow: p90 of UpdateFacility>500ms
