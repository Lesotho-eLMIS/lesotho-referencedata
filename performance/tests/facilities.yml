# /api/facilities/${id}/approvedProducts endpoint is tested in another config files
execution:
  - concurrency: 1
    hold-for: 2m
    scenario: facility-create
  - concurrency: 1
    hold-for: 2m
    scenario: facilities-get-all-minimal
  - concurrency: 1
    hold-for: 2m
    scenario: facilities-get-audit-log
  - concurrency: 1
    hold-for: 2m
    scenario: facility-update
  - concurrency: 1
    hold-for: 2m
    scenario: facilities-get-one
  - concurrency: 1
    hold-for: 2m
    scenario: facilities-get-by-boundary
  - concurrency: 1
    hold-for: 2m
    scenario: facilities-delete-one
  - concurrency: 1
    hold-for: 2m
    scenario: facilities-get-supplying
  - concurrency: 1
    hold-for: 2m
    scenario: facilities-get-all
  - concurrency: 1
    hold-for: 2m
    scenario: facilities-search-all
  - concurrency: 1
    hold-for: 2m
    scenario: facilities-search-one-page

scenarios:
  get-user-token:
    requests:
      - url: ${__P(base-uri)}/api/oauth/token
        method: POST
        label: GetUserToken
        headers:
          Authorization: Basic ${__base64Encode(${__P(basic-auth)})}
        body:
          grant_type: password
          username: ${__P(username)}
          password: ${__P(password)}
        extract-jsonpath:
          access_token:
            jsonpath: $.access_token
  facility-type-get-single:
    requests:
      - if: '${__javaScript(vars.get("facility_type") == null)}'
        then:
          - url: ${__P(base-uri)}/api/facilityTypes/ac1d268b-ce10-455f-bf87-9c667da8f060
            method: GET
            label: GetSingleFacilityType
            headers:
              Authorization: Bearer ${access_token}
              Content-Type: application/json
            jsr223:
              script-text: |
                import groovy.json.JsonSlurper
                import groovy.json.JsonOutput

                def response = prev.getResponseDataAsString()
                def jsonSlurper = new JsonSlurper()
                def facilityType = jsonSlurper.parseText(response)

                vars.put("facility_type", JsonOutput.toJson(facilityType))
  facility-operator-get-single:
    requests:
      - if: '${__javaScript(vars.get("facility_operator") == null)}'
        then:
          - url: ${__P(base-uri)}/api/facilityOperators/9456c3e9-c4a6-4a28-9e08-47ceb16a4121
            method: GET
            label: GetSingleFacilityOperator
            headers:
              Authorization: Bearer ${access_token}
              Content-Type: application/json
            jsr223:
              script-text: |
                import groovy.json.JsonSlurper
                import groovy.json.JsonOutput

                def response = prev.getResponseDataAsString()
                def jsonSlurper = new JsonSlurper()
                def facilityOperator = jsonSlurper.parseText(response)

                vars.put("facility_operator", JsonOutput.toJson(facilityOperator))
  geographic-zone-get-single:
    requests:
      - if: '${__javaScript(vars.get("geographic_zone") == null)}'
        then:
          - url: ${__P(base-uri)}/api/geographicZones/4e471242-da63-436c-8157-ade3e615c848
            method: GET
            label: GetSingleGeographicZone
            headers:
              Authorization: Bearer ${access_token}
              Content-Type: application/json
            jsr223:
              script-text: |
                import groovy.json.JsonSlurper
                import groovy.json.JsonOutput

                def response = prev.getResponseDataAsString()
                def jsonSlurper = new JsonSlurper()
                def geographicZone = jsonSlurper.parseText(response)

                vars.put("geographic_zone", JsonOutput.toJson(geographicZone))
  facility-create:
    requests:
      - include-scenario: get-user-token
      - include-scenario: facility-type-get-single
      - include-scenario: facility-operator-get-single
      - include-scenario: geographic-zone-get-single
      - url: ${__P(base-uri)}/api/facilities
        method: POST
        label: CreateFacility
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        jsr223:
          execute: before
          script-text: |
            import groovy.json.JsonSlurper
            import groovy.json.JsonOutput

            def jsonSlurper = new JsonSlurper()
            def random = new Random()

            def facility = [
              code: "TF" + random.nextInt(),
              name: "Test facility",
              description: "This is a test facility",
              geographicZone: jsonSlurper.parseText(vars.get("geographic_zone")),
              type: jsonSlurper.parseText(vars.get("facility_type")),
              operator: jsonSlurper.parseText(vars.get("facility_operator")),
              active: "true",
              goLiveDate: '2017-11-29',
              comment: "Test comment",
              enabled: "true",
              openLmisAccessible: "true",
              supportedPrograms: [
                [ code: "PRG001", active: "true" ],
                [ code: "PRG002", active: "true" ]
              ]
            ]

            vars.put("facility", JsonOutput.toJson(facility))
        body: ${facility}
        extract-jsonpath:
          facility_id: $.id
  facilities-get-all-minimal:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/facilities/minimal
        method: GET
        label: GetAllMinimalFacilities
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
  facilities-get-audit-log:
    requests:
      - include-scenario: facilities-get-one
      - url: ${__P(base-uri)}/api/facilities/${facility_id}/auditLog
        method: GET
        label: GetFacilityAuditLog
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
  facility-update:
    requests:
      - include-scenario: facilities-get-one
      - url: ${__P(base-uri)}/api/facilities/${facility_id}
        method: PUT
        label: UpdateFacility
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        jsr223:
          execute: before
          script-text: |
            import groovy.json.JsonSlurper
            import groovy.json.JsonOutput

            def response = prev.getResponseDataAsString()
            def jsonSlurper = new JsonSlurper()

            def facility = jsonSlurper.parseText(response)
            facility.name = "Updated Test facility"

            vars.put("facility", JsonOutput.toJson(facility))
        body: ${facility}
  facilities-get-one:
    requests:
      - include-scenario: facility-create
      - url: ${__P(base-uri)}/api/facilities/${facility_id}
        method: GET
        label: GetFacility
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
  facilities-get-by-boundary:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/facilities/byBoundary
        method: POST
        label: GetFacilitiesByBoundary
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        jsr223:
          execute: before
          script-text: |
            import groovy.json.JsonOutput

            def boundary = [
              type: "Polygon",
              coordinates: [
                [
                  [ 7.3828125 , -20.13847031245114 ],
                  [ 44.6484375, -20.13847031245114 ],
                  [ 44.6484375, -6.664607562172573 ],
                  [ 7.3828125 , -6.664607562172573 ],
                  [ 7.3828125 , -20.13847031245114 ]
                ]
              ]
            ]

            vars.put("boundary", JsonOutput.toJson(boundary))
        body: ${boundary}
  facilities-delete-one:
    requests:
      - include-scenario: facilities-get-one
      - url: ${__P(base-uri)}/api/facilities/${facility_id}
        method: DELETE
        label: DeleteFacility
        headers:
          Authorization: Bearer ${access_token}
  facilities-get-supplying:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/facilities/supplying?programId=dce17f2e-af3e-40ad-8e00-3496adef44c3&supervisoryNodeId=fb38bd1c-beeb-4527-8345-900900329c10
        method: GET
        label: GetSupplyingFacilities
        headers:
          Authorization: Bearer ${access_token}
  facilities-get-all:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/facilities
        method: GET
        label: GetAllFacilities
        headers:
          Authorization: Bearer ${access_token}
  facilities-search-all:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/facilities/search
        method: POST
        label: FindAllHealthCenterFacilities
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        body:
          type: "health_center"
  facilities-search-one-page:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/facilities/search?page=0&size=10
        method: POST
        label: FindFirstTenHealthCenterFacilities
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        body:
          type: "health_center"

reporting:
    - module: passfail
      criteria:
        Create Facility too slow: p90 of CreateFacility>500ms
        Get All Minimal Facilities too slow: p90 of GetAllMinimalFacilities>500ms
        Get Facility Audit Log too slow: p90 of GetFacilityAuditLog>500ms
        Update Facility too slow: p90 of UpdateFacility>500ms
        Get Facility too slow: p90 of GetFacility>500ms
        Get Facilities By Boundary too slow: p90 of GetFacilitiesByBoundary>500ms
        Delete Facility too slow: p90 of DeleteFacility>500ms
        Get Supplying Facilities too slow: p90 of GetSupplyingFacilities>500ms
        Get All Facilities too slow: p90 of GetAllFacilities>500ms
        Find All Health Center Facilities too slow: p90 of FindAllHealthCenterFacilities>500ms
        Find First Ten Health Center Facilities too slow: p90 of FindFirstTenHealthCenterFacilities>500ms
