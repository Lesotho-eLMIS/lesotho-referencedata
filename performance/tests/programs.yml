execution:
  - concurrency: ${__P(scenario-concurrency,1)}
    hold-for: ${__P(scenario-duration,60)}
    scenario: programs-get-one
  - concurrency: ${__P(scenario-concurrency,1)}
    hold-for: ${__P(scenario-duration,60)}
    scenario: programs-search
  - concurrency: ${__P(scenario-concurrency,1)}
    hold-for: ${__P(scenario-duration,60)}
    scenario: create-program
  - concurrency: ${__P(scenario-concurrency,1)}
    hold-for: ${__P(scenario-duration,60)}
    scenario: delete-program

scenarios:
  programs-get-one:
    variables:
      program_id: dce17f2e-af3e-40ad-8e00-3496adef44c3
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/programs/${program_id}
        method: GET
        label: GetProgram
        headers:
          Authorization: Bearer ${access_token}
  programs-search:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/programs
        method: GET
        label: GetAllPrograms
        headers:
          Authorization: Bearer ${access_token}
  create-program:
    requests:
      - include-scenario: get-user-token
      - url: ${__P(base-uri)}/api/programs
        method: POST
        label: CreateProgram
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        jsr223:
          execute: before
          script-text: |
            import groovy.json.JsonSlurper
            import groovy.json.JsonOutput

            def jsonSlurper = new JsonSlurper()

            def program = [
              code: jsonSlurper.parseText(vars.get("code")),
              name: "test program",
              description: "test description",
              periodsSkippable: false,
              skipAuthorization: false,
              enableDatePhysicalStockCountCompleted: false
            ];

            vars.put("program", JsonOutput.toJson(program));
        body: ${program}
        extract-jsonpath:
          program_id: $.id
  delete-program:
    requests:
      - include-scenario: create-program
      - url: ${__P(base-uri)}/api/programs/${program_id}
        method: DELETE
        label: DeleteProgram
        headers:
          Authorization: Bearer ${access_token}

reporting:
    - module: passfail
      criteria:
        Get Program too slow: p90 of GetProgram>500ms
        Get All Programs too slow: p90 of GetAllPrograms>500ms
        Create Program too slow: p90 of CreateProgram>500ms
        Delete Program too slow: p90 of DeleteProgram>500ms