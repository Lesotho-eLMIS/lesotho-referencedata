{
  "basePath": "/api",
  "definitions": {
    "errorResponse": {
      "description": "Error response",
      "properties": {
        "description": {
          "title": "description",
          "type": "string"
        },
        "message": {
          "title": "message",
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "title": "ErrorResponse",
      "type": "object"
    },
    "facility": {
      "description": "A single facility",
      "properties": {
        "active": {
          "title": "active",
          "type": "boolean"
        },
        "code": {
          "title": "code",
          "type": "string"
        },
        "comment": {
          "title": "comment",
          "type": "string"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "enabled": {
          "title": "enabled",
          "type": "boolean"
        },
        "geographicZone": {
          "$ref": "#/definitions/geographicZone",
          "type": "object"
        },
        "goDownDate": {
          "title": "goDownDate",
          "type": "string"
        },
        "goLiveDate": {
          "title": "goLiveDate",
          "type": "string"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "openLmisAccessible": {
          "title": "openLmisAccessible",
          "type": "boolean"
        },
        "operator": {
          "$ref": "#/definitions/facilityOperator",
          "type": "object"
        },
        "supportedPrograms": {
          "items": {
            "$ref": "#/definitions/program",
            "type": "object"
          },
          "title": "supportedPrograms",
          "type": "array",
          "uniqueItems": false
        },
        "type": {
          "$ref": "#/definitions/facilityType",
          "type": "object"
        }
      },
      "required": [
        "id",
        "code",
        "geographicZone",
        "type",
        "active",
        "enabled"
      ],
      "title": "Facility",
      "type": "object"
    },
    "facilityArray": {
      "items": {
        "$ref": "#/definitions/facility",
        "type": "object"
      },
      "type": "array"
    },
    "facilityOperator": {
      "description": "A single facilityOperator",
      "properties": {
        "code": {
          "title": "code",
          "type": "string"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "displayOrder": {
          "title": "displayOrder",
          "type": "integer"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "id",
        "code"
      ],
      "title": "FacilityOperator",
      "type": "object"
    },
    "facilityType": {
      "description": "A single facilityType",
      "properties": {
        "active": {
          "title": "active",
          "type": "boolean"
        },
        "code": {
          "title": "code",
          "type": "string"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "displayOrder": {
          "title": "displayOrder",
          "type": "integer"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "id",
        "code"
      ],
      "title": "FacilityType",
      "type": "object"
    },
    "facilityTypeApprovedProduct": {
      "description": "A single facilityTypeApprovedProduct",
      "properties": {
        "emergencyOrderPoint": {
          "title": "emergencyOrderPoint",
          "type": "number"
        },
        "facilityType": {
          "$ref": "#/definitions/facilityType",
          "title": "facilityType",
          "type": "object"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "maxMonthsOfStock": {
          "title": "maxMonthsOfStock",
          "type": "number"
        },
        "minMonthsOfStock": {
          "title": "minMonthsOfStock",
          "type": "number"
        },
        "programProduct": {
          "$ref": "#/definitions/orderableProduct",
          "title": "programProduct",
          "type": "object"
        }
      },
      "required": [
        "id",
        "facilityType",
        "programProduct",
        "maxMonthsOfStock"
      ],
      "title": "FacilityTypeApprovedProduct",
      "type": "object"
    },
    "geographicLevel": {
      "description": "A single geographicLevel",
      "properties": {
        "code": {
          "title": "code",
          "type": "string"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "levelNumber": {
          "title": "levelNumber",
          "type": "integer"
        },
        "name": {
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "id",
        "code",
        "name",
        "levelNumber"
      ],
      "title": "GeographicLevel",
      "type": "object"
    },
    "geographicZone": {
      "description": "A single geographicZone",
      "properties": {
        "catchmentPopulation": {
          "title": "catchmentPopulation",
          "type": "integer"
        },
        "code": {
          "title": "code",
          "type": "string"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "latitude": {
          "title": "latitude",
          "type": "number"
        },
        "level": {
          "$ref": "#/definitions/geographicLevel",
          "type": "object"
        },
        "longitude": {
          "title": "longitude",
          "type": "number"
        },
        "name": {
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "id",
        "code",
        "level"
      ],
      "title": "GeographicZone",
      "type": "object"
    },
    "globalProduct": {
      "description": "A single globalProduct",
      "properties": {
        "description": {
          "title": "description",
          "type": "string"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "packSize": {
          "title": "packSize",
          "type": "integer"
        },
        "productCode": {
          "title": "productCode",
          "type": "string"
        }
      },
      "required": [
        "productCode",
        "name",
        "description",
        "packSize"
      ],
      "title": "Global Product",
      "type": "object"
    },
    "orderableProduct": {
      "description": "A single orderableProduct",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "packSize": {
          "title": "packSize",
          "type": "long"
        },
        "productCode": {
          "title": "productCode",
          "type": "string"
        },
        "programs": {
          "items": {
            "$ref": "#/definitions/programProduct",
            "type": "object"
          },
          "title": "programs",
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "id",
        "productCode"
      ],
      "title": "Orderable Product",
      "type": "object"
    },
    "orderableProductArray": {
      "items": {
        "$ref": "#/definitions/orderableProduct",
        "type": "object"
      },
      "type": "array"
    },
    "processingPeriod": {
      "description": "A single processingPeriod",
      "properties": {
        "description": {
          "title": "description",
          "type": "string"
        },
        "endDate": {
          "title": "endDate",
          "type": "string"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "processingSchedule": {
          "$ref": "#/definitions/processingSchedule",
          "title": "processingSchedule",
          "type": "object"
        },
        "startDate": {
          "title": "startDate",
          "type": "string"
        }
      },
      "required": [
        "id",
        "processingSchedule",
        "name",
        "startDate",
        "endDate"
      ],
      "title": "Processing Period",
      "type": "object"
    },
    "processingSchedule": {
      "description": "A single processingSchedule",
      "properties": {
        "code": {
          "title": "code",
          "type": "string"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "modifiedDate": {
          "title": "modifiedDate",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "id",
        "code",
        "name"
      ],
      "title": "Processing Schedule",
      "type": "object"
    },
    "productCategory": {
      "description": "A single productCategory",
      "properties": {
        "code": {
          "title": "code",
          "type": "string"
        },
        "displayOrder": {
          "title": "displayOrder",
          "type": "integer"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "id",
        "code",
        "name",
        "displayOrder"
      ],
      "title": "ProductCategory",
      "type": "object"
    },
    "program": {
      "description": "A single program",
      "properties": {
        "active": {
          "title": "active",
          "type": "boolean"
        },
        "code": {
          "title": "code",
          "type": "string"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "periodsSkippable": {
          "title": "periodsSkippable",
          "type": "boolean"
        },
        "showNonFullSupplyTab": {
          "title": "showNonFullSupplyTab",
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "code",
        "periodsSkippable"
      ],
      "title": "Program",
      "type": "object"
    },
    "programArray": {
      "items": {
        "$ref": "#/definitions/program",
        "type": "object"
      },
      "type": "array"
    },
    "programProduct": {
      "description": "A single programProduct",
      "properties": {
        "active": {
          "title": "active",
          "type": "boolean"
        },
        "displayOrder": {
          "title": "displayOrder",
          "type": "integer"
        },
        "dosesPerMonth": {
          "title": "dosesPerMonth",
          "type": "integer"
        },
        "fullSupply": {
          "title": "fullSupply",
          "type": "boolean"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "maxMonthsStock": {
          "title": "maxMonthsStock",
          "type": "integer"
        },
        "pricePerPack": {
          "title": "pricePerPack",
          "type": "string"
        },
        "product": {
          "$ref": "#/definitions/product",
          "title": "product",
          "type": "object"
        },
        "productCategory": {
          "$ref": "#/definitions/productCategory",
          "title": "productCategory",
          "type": "object"
        },
        "program": {
          "$ref": "#/definitions/program",
          "title": "program",
          "type": "object"
        }
      },
      "required": [
        "id",
        "program",
        "product",
        "dosesPerMonth",
        "active",
        "productCategory",
        "fullSupply"
      ],
      "title": "ProgramProduct",
      "type": "object"
    },
    "requisitionGroup": {
      "description": "A single requisitionGroup",
      "properties": {
        "code": {
          "title": "code",
          "type": "string",
          "unique": true
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "memberFacilities": {
          "items": {
            "$ref": "#/definitions/facility",
            "type": "object"
          },
          "title": "memberFacilities",
          "type": "array",
          "uniqueItems": false
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "requisitionGroupProgramScheules": {
          "items": {
            "$ref": "#/definitions/requisitionGroupProgramSchedule",
            "type": "object"
          },
          "title": "requisitionGroupProgramSchedules",
          "type": "array",
          "uniqueItems": false
        },
        "supervisoryNode": {
          "$ref": "#/definitions/supervisoryNode",
          "type": "object"
        }
      },
      "required": [
        "id",
        "code",
        "name",
        "supervisoryNode"
      ],
      "title": "RequisitionGroup",
      "type": "object"
    },
    "requisitionGroupProgramSchedule": {
      "description": "A single requisitionGroupProgramSchedule",
      "properties": {
        "directDelivery": {
          "title": "directDelivery",
          "type": "boolean"
        },
        "dropOffFacility": {
          "$ref": "#/definitions/facility",
          "type": "object"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "processingSchedule": {
          "$ref": "#/definitions/processingSchedule",
          "type": "object"
        },
        "program": {
          "$ref": "#/definitions/program",
          "type": "object"
        }
      },
      "required": [
        "id",
        "program",
        "processingSchedule",
        "directDelivery"
      ],
      "title": "RequisitionGroupProgramSchedule",
      "type": "object"
    },
    "right": {
      "description": "A single right",
      "properties": {
        "attachments": {
          "items": {
            "$ref": "#/definitions/right",
            "type": "object"
          },
          "title": "attachments",
          "type": "array",
          "uniqueItems": false
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "type": {
          "enum": [
            "ORDER_FULFILLMENT",
            "SUPERVISION",
            "GENERAL_ADMIN",
            "REPORTS"
          ],
          "title": "type"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "title": "Right",
      "type": "object"
    },
    "role": {
      "description": "A single role",
      "properties": {
        "description": {
          "title": "description",
          "type": "string"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "rights": {
          "items": {
            "$ref": "#/definitions/right",
            "type": "object"
          },
          "title": "rights",
          "type": "array",
          "uniqueItems": false
        }
      },
      "required": [
        "id",
        "name"
      ],
      "title": "Role",
      "type": "object"
    },
    "stockAdjustmentReason": {
      "description": "A single stockAdjustmentReason",
      "properties": {
        "additive": {
          "title": "additive",
          "type": "boolean"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "displayOrder": {
          "title": "displayOrder",
          "type": "integer"
        },
        "name": {
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "name",
        "description"
      ],
      "title": "Stock Adjustment Reason",
      "type": "object"
    },
    "stockAdjustmentReasonArray": {
      "items": {
        "$ref": "#/definitions/stockAdjustmentReason",
        "type": "object"
      },
      "type": "array"
    },
    "supervisoryNode": {
      "description": "A single supervisoryNode",
      "properties": {
        "childNodes": {
          "items": {
            "$ref": "#/definitions/supervisoryNode",
            "type": "object"
          },
          "title": "childNodes",
          "type": "array",
          "uniqueItems": false
        },
        "code": {
          "title": "code",
          "type": "string"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "facility": {
          "$ref": "#/definitions/facility",
          "type": "object"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "parentNode": {
          "$ref": "#/definitions/supervisoryNode",
          "type": "object"
        }
      },
      "required": [
        "id",
        "code",
        "facility"
      ],
      "title": "SupervisoryNode",
      "type": "object"
    },
    "supplyLine": {
      "description": "A single supplyLine",
      "properties": {
        "description": {
          "title": "description",
          "type": "string"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "program": {
          "$ref": "#/definitions/program",
          "type": "object"
        },
        "supervisoryNode": {
          "$ref": "#/definitions/supervisoryNode",
          "type": "object"
        },
        "supplyingFacility": {
          "$ref": "#/definitions/facility",
          "type": "object"
        }
      },
      "required": [
        "id",
        "supervisoryNode",
        "program",
        "supplyingFacility"
      ],
      "title": "SupplyLine",
      "type": "object"
    },
    "tradeItem": {
      "description": "A single tradeItem",
      "properties": {
        "id": {
          "title": "id",
          "type": "string"
        },
        "manufacturer": {
          "title": "manufacturer",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "packSize": {
          "title": "packSize",
          "type": "integer"
        },
        "productCode": {
          "title": "productCode",
          "type": "string"
        }
      },
      "required": [
        "productCode"
      ],
      "title": "Trade Item",
      "type": "object"
    },
    "user": {
      "description": "A single user",
      "properties": {
        "active": {
          "title": "active",
          "type": "boolean"
        },
        "email": {
          "title": "email",
          "type": "string"
        },
        "firstName": {
          "title": "firstName",
          "type": "string"
        },
        "homeFacility": {
          "$ref": "#/definitions/facility",
          "title": "homeFacility",
          "type": "object"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "lastName": {
          "title": "lastName",
          "type": "string"
        },
        "restrictLogin": {
          "title": "restrictLogin",
          "type": "boolean"
        },
        "roles": {
          "items": {
            "$ref": "#/definitions/role",
            "type": "object"
          },
          "title": "roles",
          "type": "array",
          "uniqueItems": false
        },
        "timezone": {
          "title": "timezone",
          "type": "string"
        },
        "username": {
          "title": "username",
          "type": "string"
        },
        "verified": {
          "title": "verified",
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "username",
        "firstName",
        "lastName",
        "email"
      ],
      "title": "User",
      "type": "object"
    },
    "uuidArray": {
      "items": {
        "title": "id",
        "type": "string"
      },
      "type": "array"
    }
  },
  "host": "localhost:8080",
  "info": {
    "title": "OpenLMIS Reference Data API",
    "version": "3.0.0-beta-SNAPSHOT"
  },
  "paths": {
    "/facilities": {
      "get": {
        "description": "Get all facilities.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Creates new facility.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/facilities/search": {
      "get": {
        "description": "Returns a list of facilities.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "code",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/facilityArray"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/facilities/supplying": {
      "get": {
        "description": "Returns a list of facilities.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "programId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "supervisoryNodeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/facilities/{id}": {
      "delete": {
        "description": "Delete chosen facility.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Get chosen facility.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing facility.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/facilities/{id}/orders": {
      "get": {
        "description": "Returns a list of filtered orders supplied by a home facility.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "program",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "requestingFacility",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "period",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "schedule",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDate",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "endDate",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/facilityOperators": {
      "get": {
        "description": "Returns Facility Operators with given id from database.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Add Facility Operator to database.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/facilityOperators/{id}": {
      "delete": {
        "description": "Updates Facility Operators with given id from database.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Updates Facility Operators with given id from database.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Updates Facility Operators with given id from database.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/facilityTypeApprovedProducts": {
      "get": {
        "description": "Get all facilityTypeApprovedProducts.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Create new facilityTypeApprovedProduct.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/facilityTypeApprovedProducts/search": {
      "get": {
        "description": "Get list of full supply FacilityTypeApprovedProduct.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "facility",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "program",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/facilityTypeApprovedProducts/{id}": {
      "delete": {
        "description": "Delete chosen facilityTypeApprovedProduct.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Get chosen facilityTypeApprovedProduct.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing facilityTypeApprovedProduct.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/facilityTypes": {
      "get": {
        "description": "Get all facilityTypes.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Creates new facilityType.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/facilityTypes/{id}": {
      "delete": {
        "description": "Delete chosen facilityType.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Get chosen facilityType.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing facilityType.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/geographicLevels": {
      "get": {
        "description": "Get all geographicLevels.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Creates new geographicLevel.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/geographicLevels/{id}": {
      "delete": {
        "description": "Delete chosen geographicLevel.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Get chosen geographicLevel.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing geographicLevel.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/geographicZones": {
      "get": {
        "description": "Get all geographicZones.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Creates new geographicZone.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/geographicZones/{id}": {
      "delete": {
        "description": "Delete chosen geographicZone.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Get chosen geographicZone.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing geographicZone.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/globalProducts": {
      "put": {
        "description": "Create or update a Global Product.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/globalProduct"
            }
          }
        }
      }
    },
    "/globalProducts/{id}/tradeItems": {
      "get": {
        "description": "Get a list of Trade Item UUIDs that may fulfill for the given Orderable Product.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/uuidArray"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update the list of Trade Item UUIDs that may fulfill for the given Orderable Product.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uuidArray"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orderableProducts": {
      "get": {
        "description": "Get all Orderable Products.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/orderableProductArray"
            }
          }
        }
      }
    },
    "/orderableProducts/{id}": {
      "get": {
        "description": "Get chosen orderable product.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/orderableProduct"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/processingPeriods": {
      "get": {
        "description": "Get all periods.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Creates given processingPeriod if possible.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/processingPeriods/search": {
      "get": {
        "description": "Find periods with matched parameters.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "programId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "facilityId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/processingPeriods/searchByScheduleAndDate": {
      "get": {
        "description": "Find periods with matched parameters.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "processingScheduleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDate",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/processingPeriods/{id}": {
      "delete": {
        "description": "Delete chosen processingPeriod.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Get chosen processingPeriod.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing processingPeriod.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/processingPeriods/{id}/difference": {
      "get": {
        "description": "Display total days of processingPeriod.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/processingSchedules": {
      "get": {
        "description": "Get all schedules.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Creates new processingSchedule.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/processingSchedules/{id}": {
      "delete": {
        "description": "Delete chosen processingSchedule.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Get chosen processingSchedule.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing processingSchedule.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/processingSchedules/{id}/difference": {
      "get": {
        "description": "Display total days and months of processingSchedule periods.",
        "parameters": [
          {
            "description": "ScheduleId",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/productCategories": {
      "get": {
        "description": "Get all productCategories.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Create new productCategory.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/productCategories/search": {
      "get": {
        "description": "Find product categories with matched code.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "description": "productCategory code.",
            "in": "query",
            "name": "code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/productCategories/{id}": {
      "delete": {
        "description": "Delete chosen productCategory.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Get chosen productCategory.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing productCategory.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/programs": {
      "get": {
        "description": "Get all programs.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Creates new program.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/programs/search": {
      "get": {
        "description": "Get chosen program.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/programs/{id}": {
      "delete": {
        "description": "Delete chosen program.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Get chosen program.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing program.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/programs/{id}/stockAdjustmentReasons": {
      "get": {
        "description": "Get stock adjustment reasons by program.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/stockAdjustmentReasonArray"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Save stock adjustment reasons for a program.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stockAdjustmentReasonArray"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/stockAdjustmentReasonArray"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/requisitionGroupProgramSchedules": {
      "get": {
        "description": "Get all requisitionGroupProgramSchedules.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Create new requisitionGroupProgramSchedule.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/requisitionGroupProgramSchedules/search": {
      "get": {
        "description": "Find requisitionGroupProgramSchedule with matched parameters.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "programId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "facilityId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/requisitionGroupProgramSchedules/{id}": {
      "delete": {
        "description": "Delete chosen requisitionGroupProgramSchedule.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Get chosen requisitionGroupProgramSchedule.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing requisitionGroupProgramSchedule.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/requisitionGroups": {
      "get": {
        "description": "Get all requisitionGroups.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Create new requisitionGroup.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/requisitionGroups/{id}": {
      "delete": {
        "description": "Delete chosen requisitionGroup.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Get chosen requisitionGroup.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing requisitionGroup.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/rights": {
      "get": {
        "description": "Get all rights.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Save a right.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/right"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/right"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/rights/{rightId}": {
      "delete": {
        "description": "Delete chosen right.",
        "parameters": [
          {
            "in": "path",
            "name": "rightId",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "description": "Get chosen right.",
        "parameters": [
          {
            "in": "path",
            "name": "rightId",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/right"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/roles": {
      "get": {
        "description": "Get all roles.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Create new role.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/roles/{roleId}": {
      "delete": {
        "description": "Delete chosen role.",
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "description": "Get chosen role.",
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing role (or create new one using role ID).",
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/supervisoryNodes": {
      "get": {
        "description": "Get all supervisoryNodes.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Create new supervisoryNode.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/supervisoryNodes/{id}": {
      "delete": {
        "description": "Delete chosen supervisoryNode.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Get chosen supervisoryNode.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing supervisoryNode.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/supplyLines": {
      "get": {
        "description": "Get all supplyLines.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Creates new supplyLine.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/supplyLines/search": {
      "get": {
        "description": "Find Supply Lines with matched parameters.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "description": "program ID",
            "in": "query",
            "name": "program",
            "required": true,
            "type": "string"
          },
          {
            "description": "supervisoryNode ID",
            "in": "query",
            "name": "supervisoryNode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/supplyLines/searchByUUID": {
      "get": {
        "description": "Find Supply Lines with matched parameters.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "description": "program ID",
            "in": "query",
            "name": "programId",
            "required": true,
            "type": "string"
          },
          {
            "description": "supervisoryNode ID",
            "in": "query",
            "name": "supervisoryNodeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/supplyLines/{id}": {
      "delete": {
        "description": "Delete chosen supplyLine.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "description": "Get chosen supplyLine.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "description": "Update existing supplyLine.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/tradeItems": {
      "put": {
        "description": "Create or update a Trade Item.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/tradeItem"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Get all users.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Create or update user.",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/users/search": {
      "get": {
        "description": "Search Users with matched FirstName",
        "parameters": [
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "description": "FirstName",
            "in": "query",
            "name": "firstName",
            "required": false,
            "type": "string"
          },
          {
            "description": "LastName",
            "in": "query",
            "name": "lastName",
            "required": false,
            "type": "string"
          },
          {
            "description": "Verified",
            "in": "query",
            "name": "verified",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Active",
            "in": "query",
            "name": "active",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "HomeFacilityId (href)",
            "in": "query",
            "name": "homeFacility",
            "required": false,
            "type": "string"
          },
          {
            "description": "Username",
            "in": "query",
            "name": "username",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/programArray"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/users/{userId}": {
      "delete": {
        "description": "Delete chosen user.",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "description": "Get chosen user.",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{userId}/hasRight": {
      "get": {
        "description": "Check if the user has a right with certain criteria.",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the right to check.",
            "in": "query",
            "name": "rightName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The program (code) to check (for supervision rights).",
            "in": "query",
            "name": "programCode",
            "required": false,
            "type": "string"
          },
          {
            "description": "The supervisory node (code) to check (for supervision rights).",
            "in": "query",
            "name": "supervisoryNodeCode",
            "required": false,
            "type": "string"
          },
          {
            "description": "The warehouse (code) to check (for fulfillment rights).",
            "in": "query",
            "name": "warehouseCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{userId}/programs": {
      "get": {
        "description": "Get all programs the associated user supervises (through the home facility or through supervisory nodes).",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          },
          {
            "description": "Flag to get programs for home facility.",
            "in": "query",
            "name": "forHomeFacility",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{userId}/supervisedFacilities": {
      "get": {
        "description": "Get all facilities the associated user supervises.",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "OAuth2 access token",
            "in": "query",
            "name": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "schemes": [
    "http"
  ],
  "securityDefinitions": {},
  "swagger": "2.0"
}
