#execution:
#  - concurrency: ${__P(scenario-concurrency,1)}
#    hold-for: ${__P(scenario-duration,60)}
#    scenario: service-account-create
#  - concurrency: ${__P(scenario-concurrency,1)}
#    hold-for: ${__P(scenario-duration,60)}
#    scenario: service-account-get
#  - concurrency: ${__P(scenario-concurrency,1)}
#    hold-for: ${__P(scenario-duration,60)}
#    scenario: service-account-update
#  - concurrency: ${__P(scenario-concurrency,1)}
#    hold-for: ${__P(scenario-duration,60)}
#    scenario: service-account-delete
#
#scenarios:
#  service-account-create:
#    requests:
#      - include-scenario: get-user-token
#      - url: ${__P(base-uri)}/api/serviceAccounts
#        method: POST
#        label: CreateServiceAccount
#        headers:
#          Authorization: Bearer ${access_token}
#          Content-Type: application/json
#        jsr223:
#          execute: before
#          script-text: |
#            import groovy.json.JsonOutput
#
#            def body = [
#              token: UUID.randomUUID().toString()
#            ]
#
#            vars.put("service_account_creation_body", JsonOutput.toJson(body))
#        body: ${service_account_creation_body}
#        extract-jsonpath:
#          service_account_id: $.token
#  service-account-get:
#    requests:
#      - include-scenario: service-account-create
#      - url: ${__P(base-uri)}/api/serviceAccounts/${service_account_id}
#        method: GET
#        label: GetServiceAccount
#        headers:
#          Authorization: Bearer ${access_token}
#  service-account-update:
#    requests:
#      - include-scenario: service-account-get
#      - url: ${__P(base-uri)}/api/serviceAccounts/${service_account_id}
#        method: PUT
#        label: UpdateServiceAccount
#        headers:
#          Authorization: Bearer ${access_token}
#          Content-Type: application/json
#        jsr223:
#          execute: before
#          script-text: |
#            import groovy.json.JsonSlurper
#            import groovy.json.JsonOutput
#
#            def response = prev.getResponseDataAsString()
#            def jsonSlurper = new JsonSlurper()
#
#            def account = jsonSlurper.parseText(response)
#            // OLMIS-3861: add code to update role assignments (token and creation data cannot be updated)
#
#            vars.put("service_account", JsonOutput.toJson(account))
#        body: ${service_account}
#  service-account-delete:
#    requests:
#      - include-scenario: service-account-get
#      - url: ${__P(base-uri)}/api/serviceAccounts/${service_account_id}
#        method: DELETE
#        label: DeleteServiceAccount
#        headers:
#          Authorization: Bearer ${access_token}
#
#reporting:
#    - module: passfail
#      criteria:
#        Create Service Account too slow: p90 of CreateServiceAccount>500ms
#        Get Service Account too slow: p90 of GetServiceAccount>500ms
#        Update Service Account too slow: p90 of UpdateServiceAccount>500ms
#        Delete Service Account too slow: p90 of DeleteServiceAccount>500ms
